import '@webcomponents/webcomponentsjs';
import 'document-register-element';
import './resources/style.scss';
import * as COMMON from 'common';

/*
INPUT:
<cotui-___componentname____></cotui-___componentname____>
*/


// Simple JS Element Constructor
const initCustomElement = function({ target, label='Sample Title'}={}){
  this.$el = document.querySelectorAll(target)
  const ce = new CustomElement();
        ce.setAttribute('is','cotui-___componentname____')
        ce.dataLabel = label;
        
  this.$el.forEach((el)=>{  
    el.append(ce);
  });

  return this.$el
}



// HTML Element Definition Shadow DOM not impelemented for Layout Components
class CustomElement extends HTMLElement {
  constructor(){
    super();

    this.count = 0
  }

  static get observedAttributes() { return ['data-label']; }
  attributeChangedCallback(name, oldValue, newValue) { 
    this[name] = newValue;
    if(oldValue !== null && oldValue !== newValue) this._updateComponents()
  }

  get dataLabel(){ return this.getAttribute('data-label') }
  set dataLabel(val) { if(val == this.dataLabel) return; this.setAttribute('data-label',val) }

  handleClick(evt){
    this.count += 1;
    this.setAttribute('data-label',`You clicked this button ${this.count} times`)
  }

  _updateComponents(){
    this.$button.innerText = this.dataLabel
  }

  // Element mounted to DOM
  connectedCallback(){
    const $button = document.createElement('button');
          $button.id = `js-button__${COMMON.utils.generateID()}`
          $button.classList.add('button__custom')
          $button.addEventListener('click',this.handleClick.bind(this))
          $button.innerText = this.dataLabel;

          this.$button = $button;
    this.append($button)
  }

}

customElements.define("cotui-___componentname____", CustomElement) 
export default initCustomElement
