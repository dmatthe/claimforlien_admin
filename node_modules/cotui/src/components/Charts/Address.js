import Axios from 'axios';

class AddressLookup{
    constructor(){
      this.address =  null;
    }
  
    setAddress(adr){
      this.address = adr;
    }
  
    setPermitArea(adr){
      this.permitArea = adr;
    }
  
    insidePolygon(point, vs) {
        // ray-casting algorithm based on
        // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html
  
        var x = point[0], y = point[1];
  
        var inside = false;
        for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {
            var xi = vs[i][0], yi = vs[i][1];
            var xj = vs[j][0], yj = vs[j][1];
  
            var intersect = ((yi > y) != (yj > y))
                && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);
            if (intersect) inside = !inside;
        }
  
        return inside;
    };
  
    getLayer(path){
      const layer = 'COTGEO_CENSUS_NEIGHBORHOOD'//'City_Ward_2018'
      //path = '//services3.arcgis.com/b9WvedVPoizGfvfD/arcgis/rest/services/'+layer+'/FeatureServer/0/query?returnGeometry=true&where=&outSr=4326&outFields=*&inSr=4326&geometry='+addr.latitude+','+addr.longitude+'&geometryType=esriGeometryEnvelope&spatialRel=esriSpatialRelIntersects&geometryPrecision=6&f=geojson';
      path = `https://services3.arcgis.com/b9WvedVPoizGfvfD/arcgis/rest/services/${layer}/FeatureServer/0/query?returnGeometry=true&where=1%3D1&outSr=4326&outFields=*&inSr=4326&geometry=&geometryType=esriGeometryEnvelope&spatialRel=esriSpatialRelIntersects&geometryPrecision=6&f=geojson`;
      return Axios.get(path).then(res=>{ 
          return res.data.features
        })
    }


    suggestAddress(addr){
      //https://map.toronto.ca/geoservices/rest/search/rankedsearch?searchString=High%20Park&searchArea=1&matchType=1&projectionType=1&retRowLimit=10
      const path = '/*@echo API_GEOSERVICES*//cotgeocoder/rest/geocoder/suggest?f=json&addressOnly=0&retRowLimit=31&searchString='+addr;
      
  
      return Axios.get(path).then(res=>{ return res.result.rows||[] })
    }
  
    getAddressKEYSTRING(key){
      const path = '/*@echo API_GEOSERVICES*//cotgeocoder/rest/geocoder/findAddressCandidates?f=json&keyString='+key;
      return $.ajax(path,{
        error:(err)=>{
          console.log(err);
        },
        success:(data)=>{}
      })
      .then(res=>{
        //@if ENV=='local'
        console.log(res)
        //@endif
        return res.result.rows||[]
      })
    }
  
    searchAddress(addr){
      const path = '/*@echo API_GEOSERVICES*//geoservices/rest/search/rankedsearch?searchArea=1&matchType=1&projectionType=1&retRowLimit=10&areaTypeCode1=CITW&areaTypeCode2=WD03&searchString='+addr;
      return $.ajax(path,{
        error:(err)=>{
          console.log(err);
        },
        success:(data)=>{}
      })
      .then(res=>{
  
        if(res.result.bestResult.length > 0) return res.result.bestResult
        if(res.result.likelyResults.length > 0) return res.result.likelyResults
        if(res.result.restOfResults.length > 0 ) return res.result.restOfResults
  
        return []
      })
    }
  }

  export default AddressLookup;
  