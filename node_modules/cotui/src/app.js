import * as components from './components';
/*
import '@fortawesome/fontawesome-free/js/fontawesome';
import '@fortawesome/fontawesome-free/js/solid';
import '@fortawesome/fontawesome-free/js/regular';
import '@fortawesome/fontawesome-free/js/brands';
*/

import smoothscroll from 'smoothscroll-polyfill';
smoothscroll.polyfill();

/**
 * Initialize COTUI Libary
 * @class
 * @property {string} target - initialize components contained in the target.
 * @property {boolean} initCustomElements  - initialze custom elements
 */
class COTUI{
  constructor({target='#cotui-app', initCustomElements=false}={}){
    
    /*
    if( window.COTUI_INIT ) {
      return;
    } else {
      window.COTUI_INIT = true;
    }
    */
    this.target = target;
    this.els = document.querySelectorAll(target)
    this.ariaRegion = document.querySelectorAll('[aria-live]')

    if(false && !this.ariaRegion.length){
      this.ariaRegion = document.createElement('div')
      this.ariaRegion.setAttribute('aria-live','polite')
      document.body.appendChild(this.ariaRegion);
    }

    
    if(false && initCustomElements){
     Object.keys(components).forEach( (componentName)=>{ 
       if(this[componentName].prototype.hasOwnProperty('initCustomElement')){
         console.info('Initialize Component',componentName)
         this[componentName].prototype.initCustomElement()
       }  
      })
    }

  }

  initOffCanvas(){
    const $buttons = document.querySelectorAll(".offcanvas--button")
    
    $buttons.forEach($btn=>{
      const target = $btn.getAttribute('aria-controls');
      const type = $btn.getAttribute('data-offcanvas-position')
      const $target = document.querySelectorAll(target.split(' ').map(str=>{return `#${str}`}).join(','))
      const $body = document.body

      $target.forEach(area=>{
        area.classList.add(`offcanvas${type?`--${type}`:`--left`}`)
      })

 

      $btn.addEventListener('click',evt=>{

        $target.forEach(area=>{

          if(evt.target.getAttribute('data-offcanvas') === 'open'){
            evt.target.setAttribute('data-offcanvas','closed')
            area.style.height = '0px';
            $body.style.marginTop = area.style.height;

            this.tranisioning = true;
            setTimeout(function() {
              if(!this.tranisioning){
                area.style.display = 'none';
                this.tranisioning = false;
              }
            }, 500);

          } else {
            evt.target.setAttribute('data-offcanvas','open')
            area.style.display = 'block';

            this.tranisioning = true;
            setTimeout(function() {
              if(!this.tranisioning){
                area.style.height = '320px';
                $body.style.marginTop = area.style.height;
                this.tranisioning = false;
              }
            }, 100);
          }
        })
        evt.preventDefault();
      })

    })
  }




  ParseSection({sections,target}={}){
    if( NodeList.prototype.isPrototypeOf(sections) ) {
        let $section = []
        this.querySelectorAll('section').forEach(section=>{
        const $title = section.title||section.querySelector('.accordion__header')||'Please provide title'
        const $body =  section.querySelector('.accordion__body').innerHTML;

        const title = $title.innerText||$title
        const slug = COMMON.utils.slugify(title)
        const expanded = section.getAttribute('active')==='true'
        const body = $body
        
        section.remove()
        $section.push({title, slug, expanded, body})
        })
        return $section
    } else {
        return sections
        
    }
  }
  
}

Object.assign(COTUI.prototype, components)

/*
const target = '#js-cotui-app';
const hasMain = document.querySelector(target)
if(hasMain){ new COTUI({target: target,initCustomElements: true}); }
*/

new COTUI({initCustomElements: true});
export default COTUI
